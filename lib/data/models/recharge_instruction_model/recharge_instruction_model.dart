///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class RechargeInstructionModelDataRechargeInstructionLanguage {
/*
{
  "id": 6,
  "recharge_instruction_id": 1,
  "language_id": 2,
  "name": "इसे आरंभ, मध्य और अंत का अनुसरण करना चाहिए। आप प्रारंभ में एक संक्षिप्त अनुभाग भी शामिल करना चाहेंगे जिसमें यह विवरण हो कि कितने खिलाड़ी खेल सकते हैं और आयु सीमा क्या है।",
  "status": 1,
  "created_at": "09:03:54 am",
  "updated_at": "2024-06-04T09:48:11.000000Z",
  "deleted_at": null
} 
*/

  int? id;
  int? rechargeInstructionId;
  int? languageId;
  String? name;
  int? status;
  String? createdAt;
  String? updatedAt;
  String? deletedAt;

  RechargeInstructionModelDataRechargeInstructionLanguage({
    this.id,
    this.rechargeInstructionId,
    this.languageId,
    this.name,
    this.status,
    this.createdAt,
    this.updatedAt,
    this.deletedAt,
  });
  RechargeInstructionModelDataRechargeInstructionLanguage.fromJson(
      Map<String, dynamic> json) {
    id = json['id']?.toInt();
    rechargeInstructionId = json['recharge_instruction_id']?.toInt();
    languageId = json['language_id']?.toInt();
    name = json['name']?.toString();
    status = json['status']?.toInt();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    deletedAt = json['deleted_at']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['recharge_instruction_id'] = rechargeInstructionId;
    data['language_id'] = languageId;
    data['name'] = name;
    data['status'] = status;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['deleted_at'] = deletedAt;
    return data;
  }
}

class RechargeInstructionModelData {
/*
{
  "id": 1,
  "name": "It should follow a beginning, middle, and end. You'll also want to include a brief section early on that details how many players can play, and the age range.",
  "status": true,
  "created_at": "2024-05-02T08:48:54.000000Z",
  "updated_at": "2024-06-04T09:48:11.000000Z",
  "deleted_at": null,
  "recharge_instruction_language": {
    "id": 6,
    "recharge_instruction_id": 1,
    "language_id": 2,
    "name": "इसे आरंभ, मध्य और अंत का अनुसरण करना चाहिए। आप प्रारंभ में एक संक्षिप्त अनुभाग भी शामिल करना चाहेंगे जिसमें यह विवरण हो कि कितने खिलाड़ी खेल सकते हैं और आयु सीमा क्या है।",
    "status": 1,
    "created_at": "09:03:54 am",
    "updated_at": "2024-06-04T09:48:11.000000Z",
    "deleted_at": null
  }
} 
*/

  int? id;
  String? name;
  bool? status;
  String? createdAt;
  String? updatedAt;
  String? deletedAt;
  RechargeInstructionModelDataRechargeInstructionLanguage?
      rechargeInstructionLanguage;

  RechargeInstructionModelData({
    this.id,
    this.name,
    this.status,
    this.createdAt,
    this.updatedAt,
    this.deletedAt,
    this.rechargeInstructionLanguage,
  });
  RechargeInstructionModelData.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    status = json['status'];
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    deletedAt = json['deleted_at']?.toString();
    rechargeInstructionLanguage =
        (json['recharge_instruction_language'] != null)
            ? RechargeInstructionModelDataRechargeInstructionLanguage.fromJson(
                json['recharge_instruction_language'])
            : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['status'] = status;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['deleted_at'] = deletedAt;
    if (rechargeInstructionLanguage != null) {
      data['recharge_instruction_language'] =
          rechargeInstructionLanguage!.toJson();
    }
    return data;
  }
}

class RechargeInstructionModel {
/*
{
  "success": true,
  "data": [
    {
      "id": 1,
      "name": "It should follow a beginning, middle, and end. You'll also want to include a brief section early on that details how many players can play, and the age range.",
      "status": true,
      "created_at": "2024-05-02T08:48:54.000000Z",
      "updated_at": "2024-06-04T09:48:11.000000Z",
      "deleted_at": null,
      "recharge_instruction_language": {
        "id": 6,
        "recharge_instruction_id": 1,
        "language_id": 2,
        "name": "इसे आरंभ, मध्य और अंत का अनुसरण करना चाहिए। आप प्रारंभ में एक संक्षिप्त अनुभाग भी शामिल करना चाहेंगे जिसमें यह विवरण हो कि कितने खिलाड़ी खेल सकते हैं और आयु सीमा क्या है।",
        "status": 1,
        "created_at": "09:03:54 am",
        "updated_at": "2024-06-04T09:48:11.000000Z",
        "deleted_at": null
      }
    }
  ],
  "message": "Recharge Instruction Get successfully."
} 
*/

  bool? success;
  List<RechargeInstructionModelData?>? data;
  String? message;

  RechargeInstructionModel({
    this.success,
    this.data,
    this.message,
  });
  RechargeInstructionModel.fromJson(Map<String, dynamic> json) {
    success = json['success'];
    if (json['data'] != null) {
      final v = json['data'];
      final arr0 = <RechargeInstructionModelData>[];
      v.forEach((v) {
        arr0.add(RechargeInstructionModelData.fromJson(v));
      });
      this.data = arr0;
    }
    message = json['message']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['success'] = success;
    if (this.data != null) {
      final v = this.data;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['data'] = arr0;
    }
    data['message'] = message;
    return data;
  }
}
